{"version":3,"sources":["webpack:///./src/pages/apply.js"],"names":["CenteredForm","styled","Form","setFileValidity","fileUpload","files","length","setCustomValidity","swal","size","value","ApplicationForm","_initFirebase","state","applicationFormConfig","initialApplicationData","generalSettings","loading","validated","sending","submitted","alreadyApplied","blackListed","errorMsg","loadData","a","loadApplicationFormConfig","props","firebase","get","then","snapshot","data","catch","setState","loadUserData","user","context","uid","console","error","loadGeneralSettings","loadUserApplication","application","exists","Promise","all","values","roles","hasOwnProperty","applicant","blacklisted","upemember","provisionalMember","componentDidMount","this","componentDidUpdate","prevProps","window","bsCustomFileInput","init","render","flexdirection","style","justifyContent","alignItems","maxWidth","applicationsOpen","semester","href","onSubmit","event","preventDefault","form","currentTarget","fileUploads","Array","from","querySelectorAll","forEach","checkValidity","stopPropagation","inputs","radios","filter","r","checked","questions","responses","map","inputId","id","parseInt","firstName","split","newName","email","find","q","name","order","type","radioResponses","inputValue","uploadFiles","resolve","reject","pop","file","put","ref","getDownloadURL","fileURLs","concat","uploadApplicationData","set","deliberation","accepted","confirmed","feedback","votes","interview","interviewed","updateUser","update","profileIMG","sendReceipt","sendApplicationReceipt","successMessage","alignSelf","title","route","noValidate","color","sort","b","question","questionComponent","defaultValue","Control","required","as","rows","File","label","custom","accept","onChange","e","target","Check","inline","defaultChecked","Row","width","key","Group","controlId","Label","renderQuestion","disabled","Component","contextType","AuthUserContext","compose","withAuthorization","isLoggedIn","withFirebase"],"mappings":"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","file":"component---src-pages-apply-js-90346b299c663eb51eb0.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { compose } from \"recompose\";\nimport swal from \"@sweetalert/with-react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport {\n  AuthUserContext,\n  withFirebase,\n  withAuthorization,\n} from \"upe-react-components\";\n\nimport { isLoggedIn } from \"../util/conditions\";\nimport Loader from \"../components/Loader\";\nimport Logo from \"../components/Logo\";\nimport SEO from \"../components/SEO\";\nimport { Container, RequiredAsterisk } from \"../styles/global\";\n\nconst CenteredForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 500px;\n  flex: auto;\n  margin-bottom: 25px;\n`;\n\nconst setFileValidity = (fileUpload) => {\n  if (fileUpload.files.length === 0) {\n    fileUpload.setCustomValidity(\"You must upload a file!\");\n    swal(\"Uh oh!\", \"You must upload a file!\", \"error\");\n  } else if (fileUpload.files.length > 1) {\n    fileUpload.setCustomValidity(\"You can only upload 1 file!\");\n    swal(\"Uh oh!\", \"You can only upload 1 file!\", \"error\");\n  } else if (fileUpload.files[0].size > 1048576) {\n    fileUpload.setCustomValidity(\"Max file size is 1MB!\");\n    fileUpload.value = \"\";\n    swal(\"Uh oh!\", \"Max file size is 1MB!\", \"error\");\n  } else {\n    fileUpload.setCustomValidity(\"\");\n  }\n};\n\nclass ApplicationForm extends Component {\n  _initFirebase = false;\n  state = {\n    applicationFormConfig: null,\n    initialApplicationData: null,\n    generalSettings: null,\n    loading: true,\n    validated: false,\n    sending: false,\n    submitted: false,\n    alreadyApplied: false,\n    blackListed: false,\n    errorMsg: \"\",\n  };\n  static contextType = AuthUserContext;\n\n  componentDidMount() {\n    if (this.props.firebase && !this._initFirebase) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.firebase && !this._initFirebase) this.loadData();\n    if (typeof window !== \"undefined\") {\n      import(\"bs-custom-file-input\").then((bsCustomFileInput) => {\n        bsCustomFileInput.init();\n      });\n    }\n  }\n\n  loadData = async () => {\n    this._initFirebase = true;\n    const loadApplicationFormConfig = this.props.firebase\n      .applicationFormConfig()\n      .get()\n      .then((snapshot) => snapshot.data())\n      .catch(() =>\n        this.setState({\n          errorMsg: \"Application Form Config doesn't exist!\",\n          loading: false,\n        })\n      );\n    const loadUserData = this.props.firebase\n      .user(this.context.uid)\n      .get()\n      .then((snapshot) => snapshot.data())\n      .catch(console.error);\n    const loadGeneralSettings = this.props.firebase\n      .generalSettings()\n      .get()\n      .then((snapshot) => snapshot.data())\n      .catch(() =>\n        this.setState({\n          errorMsg: \"General settings doesn't exist!\",\n          loading: false,\n        })\n      );\n    const loadUserApplication = this.props.firebase\n      .application(this.context.uid)\n      .get()\n      .then((snapshot) => (snapshot.exists ? snapshot.data() : null))\n      .catch(console.error);\n\n    Promise.all([\n      loadApplicationFormConfig,\n      loadUserData,\n      loadGeneralSettings,\n      loadUserApplication,\n    ]).then((values) =>\n      this.setState({\n        loading: false,\n        applicationFormConfig: values[0],\n        alreadyApplied:\n          values[1].roles.hasOwnProperty(\"applicant\") &&\n          values[1].roles.applicant,\n        blackListed:\n          (values[1].roles.hasOwnProperty(\"blacklisted\") &&\n            values[1].roles.blacklisted) ||\n          (values[1].roles.hasOwnProperty(\"upemember\") &&\n            values[1].roles.upemember) ||\n          (values[1].roles.hasOwnProperty(\"provisionalMember\") &&\n            values[1].roles.provisionalMember),\n        generalSettings: values[2],\n        initialApplicationData: values[3],\n      })\n    );\n  };\n\n  render() {\n    const {\n      loading,\n      errorMsg,\n      submitted,\n      validated,\n      applicationFormConfig,\n      sending,\n      alreadyApplied,\n      blackListed,\n      generalSettings,\n    } = this.state;\n\n    if (loading) return <Loader />;\n\n    if (blackListed)\n      return (\n        <Container\n          flexdirection=\"column\"\n          style={{\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            maxWidth: 700,\n          }}\n        >\n          <Logo size=\"medium\" />\n          <h1>You are not allowed to apply!</h1>\n          <p>\n            Unfortunately you are not eligible to apply. If you think this is a\n            mistake, or want further information on this, please contact\n            upe@bu.edu.\n          </p>\n        </Container>\n      );\n\n    if (!generalSettings.applicationsOpen)\n      return (\n        <Container\n          flexdirection=\"column\"\n          style={{\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            maxWidth: 700,\n          }}\n        >\n          <Logo size=\"medium\" />\n          <h1>Applications are closed!</h1>\n          <p>\n            Unfortunately, the application for the{\" \"}\n            {applicationFormConfig.semester} season has closed. If you're\n            interesting in joining BU UPE, please come back next semester and\n            apply, we'd love to have you! In the meantime, feel free to check\n            out the public events on{\" \"}\n            <a href=\"https://upe.bu.edu/events\">our calendar</a>.\n          </p>\n        </Container>\n      );\n\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      if (!generalSettings.applicationsOpen) {\n        swal(\n          \"Uh oh!\",\n          \"Applications are closed! Not sure how you got here, but unfortunately we can't submit this for you as applications have closed.\",\n          \"error\"\n        );\n        return;\n      }\n\n      const form = event.currentTarget;\n      const fileUploads = Array.from(\n        form.querySelectorAll(\".custom-file-input\")\n      );\n      fileUploads.forEach((fileUpload) => setFileValidity(fileUpload));\n\n      if (form.checkValidity() === false) {\n        event.stopPropagation();\n      } else {\n        this.setState({ sending: true });\n        const inputs = Array.from(form.querySelectorAll(\".form-control\"));\n        const radios = Array.from(\n          form.querySelectorAll(\".custom-radio>.custom-control-input\")\n        ).filter((r) => r.checked);\n        const { semester, questions } = this.state.applicationFormConfig;\n        const { uid, roles } = this.context;\n        roles.applicant = true;\n\n        let firstName, email, newName;\n        let responses = inputs.map(({ id: inputId, value }) => {\n          const id = parseInt(inputId);\n\n          if (id === 1) {\n            firstName = value.split(\" \")[0];\n            newName = value;\n          } else if (id === 2) email = value;\n\n          const { name, order, type } = questions.find((q) => q.id === id);\n          return {\n            id,\n            value,\n            name,\n            order,\n            type,\n          };\n        });\n\n        const radioResponses = radios.map(\n          ({ name: inputId, value: inputValue }) => {\n            const id = parseInt(inputId);\n            // eslint-disable-next-line eqeqeq\n            const value = inputValue == \"true\";\n            const { name, order, type } = questions.find((q) => q.id === id);\n            return {\n              id,\n              value,\n              name,\n              order,\n              type,\n            };\n          }\n        );\n\n        const uploadFiles = fileUploads.map(\n          (fileUpload) =>\n            new Promise((resolve, reject) => {\n              const id = parseInt(fileUpload.id.split(\"-\").pop());\n              this.props.firebase\n                .file(uid, id)\n                .put(fileUpload.files[0])\n                .then((snapshot) => snapshot.ref.getDownloadURL())\n                .then((value) => {\n                  const { name, order, type } = questions.find(\n                    (q) => q.id === id\n                  );\n                  return resolve({\n                    id,\n                    value,\n                    name,\n                    order,\n                    type,\n                  });\n                });\n            })\n        );\n\n        const fileURLs = await Promise.all(uploadFiles);\n        responses = responses.concat(fileURLs).concat(radioResponses);\n\n        const uploadApplicationData = this.props.firebase.application(uid).set({\n          responses,\n          semester,\n          deliberation: {\n            accepted: false,\n            confirmed: false,\n            feedback: \"\",\n            votes: {},\n          },\n          interview: {\n            interviewed: false,\n          },\n        });\n        const updateUser = this.props.firebase.user(uid).update({\n          roles,\n          name: newName,\n          profileIMG: \"\",\n        });\n        const sendReceipt = this.props.firebase.sendApplicationReceipt({\n          email,\n          firstName,\n        });\n\n        await Promise.all([uploadApplicationData, updateUser, sendReceipt]);\n        this.setState({ submitted: true, sending: false });\n      }\n\n      this.setState({\n        validated: true,\n      });\n    };\n\n    const successMessage = (\n      <Container flexdirection=\"column\">\n        <div style={{ alignSelf: \"center\" }}>\n          <Logo size=\"medium\" />\n        </div>\n\n        <h1>Application Submitted!</h1>\n        <p>\n          Thank you for applying to join BU UPE. Please check your email for a\n          confirmation of your submission. Further details, such as interview\n          timeslots, will be prompted via email and can be entered in this\n          application. If you'd like to edit your submission, simply refresh\n          this page and re-apply.\n        </p>\n      </Container>\n    );\n\n    if (errorMsg)\n      return (\n        <Container flexdirection=\"column\">\n          <h1>Uh oh!</h1>\n          <p>{errorMsg}</p>\n        </Container>\n      );\n\n    if (submitted) return successMessage;\n\n    const renderQuestion = (question) => {\n      const { initialApplicationData } = this.state;\n      let defaultValue = \"\";\n      if (initialApplicationData !== null) {\n        defaultValue = initialApplicationData.responses.find(\n          (r) => r.id === question.id\n        ).value;\n      } else if (question.id === 1) defaultValue = this.context.name;\n      else if (question.id === 2) defaultValue = this.context.email;\n\n      let questionComponent;\n      switch (question.type) {\n        case \"textarea\":\n          questionComponent = (\n            <Form.Control\n              required={question.required}\n              as=\"textarea\"\n              rows=\"3\"\n              defaultValue={defaultValue}\n            />\n          );\n          break;\n        case \"file\":\n          questionComponent = (\n            <Form.File\n              id={`custom-file-${question.id}`}\n              label=\"Upload file\"\n              custom\n              accept=\".pdf\"\n              onChange={(e) => setFileValidity(e.target)}\n            />\n          );\n          break;\n        case \"yesno\":\n          questionComponent = (\n            <div>\n              <Form.Check\n                custom\n                required={question.required}\n                inline\n                defaultChecked={defaultValue}\n                value=\"true\"\n                label=\"Yes\"\n                type=\"radio\"\n                name={question.id}\n                id={`${question.id}-1`}\n              />\n              <Form.Check\n                custom\n                required={question.required}\n                inline\n                defaultChecked={!defaultValue}\n                value=\"false\"\n                label=\"No\"\n                type=\"radio\"\n                name={question.id}\n                id={`${question.id}-2`}\n              />\n            </div>\n          );\n          break;\n        default:\n          questionComponent = (\n            <Form.Control\n              required={question.required}\n              type={question.type}\n              defaultValue={defaultValue}\n            />\n          );\n          break;\n      }\n\n      return (\n        <Form.Row style={{ width: \"100%\" }} key={question.id}>\n          <Form.Group controlId={question.id} style={{ width: \"100%\" }}>\n            <Form.Label>\n              {question.name} {question.required && <RequiredAsterisk />}\n            </Form.Label>\n            {questionComponent}\n          </Form.Group>\n        </Form.Row>\n      );\n    };\n\n    return (\n      <>\n        <SEO title=\"Apply\" route=\"/apply\" />\n        <Container flexdirection=\"row\" style={{ justifyContent: \"center\" }}>\n          <CenteredForm noValidate validated={validated} onSubmit={onSubmit}>\n            <Logo size=\"medium\" />\n            <h1>Apply to BU UPE</h1>\n            {/* Pre application welcome message, perhaps make this configurable in admin settings\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras\n            fringilla, dui vitae maximus luctus, magna urna convallis purus,\n            condimentum ullamcorper velit dui eu dolor. Pellentesque et\n            tincidunt tellus. Fusce venenatis magna sed elit bibendum, sed\n            scelerisque augue placerat. Vestibulum nec mi efficitur, posuere\n            nisl at, pretium ex. Quisque quam dui, pulvinar a pellentesque eu,\n            cursus et elit. Ut volutpat imperdiet ex, id commodo nulla pretium\n            id. Proin accumsan dignissim tortor, id pulvinar urna euismod ac.\n            Morbi suscipit massa id dui feugiat ultrices. Nulla ac faucibus\n            tortor, quis pharetra leo.\n          </p>\n          */}\n\n            {alreadyApplied && (\n              <p style={{ color: \"red\" }}>\n                Look's like you've already applied! Feel free to reapply\n                however, just note that it will overwrite your previous\n                submission.\n              </p>\n            )}\n\n            {applicationFormConfig.questions\n              .sort((a, b) => (a.order > b.order ? 1 : -1))\n              .map((question) => renderQuestion(question))}\n\n            <Button type=\"submit\" disabled={sending}>\n              {sending ? \"Submitting...\" : \"Submit\"}\n            </Button>\n          </CenteredForm>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default compose(\n  withAuthorization(isLoggedIn),\n  withFirebase\n)(ApplicationForm);\n"],"sourceRoot":""}