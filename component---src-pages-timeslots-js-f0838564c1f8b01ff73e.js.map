{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.flat.js","webpack:///./node_modules/core-js/modules/es.array.unscopables.flat.js","webpack:///./src/components/Timeslots/ScrollableRow.js","webpack:///./src/components/Timeslots/ScheduleColumn.js","webpack:///./src/components/Timeslots/InterviewerView.js","webpack:///./src/components/Timeslots/ApplicantView.js","webpack:///./src/pages/timeslots.js","webpack:///./node_modules/core-js/internals/flatten-into-array.js"],"names":["$","flattenIntoArray","toObject","toLength","toInteger","arraySpeciesCreate","target","proto","flat","depthArg","arguments","length","undefined","O","this","sourceLen","A","addToUnscopables","ScrollableRow","slider","React","createRef","isDown","startX","scrollLeft","handleMouseDown","e","pageX","current","offsetLeft","handleMouseUp","handleMouseMove","preventDefault","walk","handleMouseLeave","render","Row","style","flexWrap","overflowX","justifyContent","ref","onMouseDown","onMouseLeave","onMouseMove","onMouseUp","props","children","Component","ScheduleColumn","date","timeslotLength","userSelectedSlots","selectTimeslot","slotsWithOpening","unselectTimeslot","startHour","endHour","useState","showToast","setShowToast","numSlots","slots","Array","from","_","i","slotsPerTimeslot","dateFromSlot","slot","hours","Math","floor","minutes","Date","getFullYear","getMonth","getDate","formatTime","getHours","toString","padStart","getMinutes","handleSelect","hasOwnProperty","offset","end","pos","validateSlot","Col","width","flex","position","Toast","onClose","show","delay","autohide","Body","className","color","toDateString","map","getPositions","collection","isSelected","isTop","isMiddle","includes","isBottom","generateSlotStyle","padding","cursor","display","borderLeft","borderRight","borderTop","borderBottom","background","SlotBase","onClick","key","InterviewerView","_initFirebase","state","settings","loading","error","selectedTimeslots","firstDataLoad","runningTransaction","unsub","loadSettings","doc","firebase","generalSettings","get","exists","data","timeslotDays","day","toDate","setState","timeslots","onSnapshot","querySnapshot","docs","time","id","forEach","ts","index","findIndex","sts","push","console","saveTimeslots","authUser","context","reduce","acc","cur","existingTimeslots","then","snapshot","newTimeslots","Object","values","filter","interviewers","uid","newTimeslotMap","asyncForEach","array","callback","firestoreRoot","runTransaction","transaction","keys","update","timeslot","delete","matchingTimeslots","ets","getTime","every","wroteToDb","mts","name","newTimeslotRef","set","swal","window","scrollTo","document","body","scrollHeight","saved","timeslotsToSlots","timeslotStart","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","Loader","flexdirection","timeslotsOpen","timeslotsOpenForApplicants","timeslotEnd","roles","applicant","timeslotsForDay","alignItems","Button","marginTop","marginBottom","height","marginLeft","Header","contextType","AuthUserContext","compose","withAuthorization","isRecruitmentTeam","withFirebase","isApplicant","TimeslotPage","location","useContext","Layout","isArray","bind","original","source","start","depth","mapper","thisArg","element","targetIndex","sourceIndex","mapFn","TypeError","module","exports"],"mappings":"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","file":"component---src-pages-timeslots-js-f0838564c1f8b01ff73e.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flat` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: 'Array', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\naddToUnscopables('flat');\n","import React, { Component } from \"react\";\nimport Row from \"react-bootstrap/Row\";\n\nclass ScrollableRow extends Component {\n  slider = React.createRef();\n  isDown = false;\n  startX = null;\n  scrollLeft = null;\n\n  handleMouseDown = (e) => {\n    this.isDown = true;\n    this.startX = e.pageX - this.slider.current.offsetLeft;\n    this.scrollLeft = this.slider.current.scrollLeft;\n  };\n  handleMouseUp = (e) => {\n    this.isDown = false;\n  };\n  handleMouseMove = (e) => {\n    if (!this.isDown) return;\n    e.preventDefault();\n    const x = e.pageX - this.slider.current.offsetLeft;\n    const walk = (x - this.startX) * 3; //scroll-fast\n    this.slider.current.scrollLeft = this.scrollLeft - walk;\n  };\n  handleMouseLeave = (e) => {\n    this.isDown = false;\n  };\n\n  render() {\n    return (\n      <Row\n        style={{\n          flexWrap: \"unset\",\n          overflowX: \"auto\",\n          justifyContent: \"flex-start\",\n        }}\n        ref={this.slider}\n        onMouseDown={this.handleMouseDown}\n        onMouseLeave={this.handleMouseLeave}\n        onMouseMove={this.handleMouseMove}\n        onMouseUp={this.handleMouseUp}\n      >\n        {this.props.children}\n      </Row>\n    );\n  }\n}\n\nexport default ScrollableRow;\n","import React, { useState } from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Toast from \"react-bootstrap/Toast\";\n\nconst ScheduleColumn = ({\n  date,\n  timeslotLength,\n  userSelectedSlots,\n  slotsWithOpening,\n  selectTimeslot,\n  unselectTimeslot,\n  startHour,\n  endHour,\n}) => {\n  const [showToast, setShowToast] = useState(false);\n\n  const numSlots = (endHour - startHour) * 4; // 15 min slots\n  const slots = Array.from(Array(numSlots), (_, i) => i * 15); // total 15 min slots in a day\n  const slotsPerTimeslot = timeslotLength / 15; // number of 15 min slots in an interview\n\n  // converts a start offset (slot) into a Date object\n  const dateFromSlot = (slot) => {\n    const hours = startHour + Math.floor(slot / 60);\n    const minutes = slot % 60;\n    return new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      hours,\n      minutes\n    );\n  };\n\n  // formats a date into a AM/PM time string\n  const formatTime = (date) => {\n    let hours = date.getHours() % 12;\n    if (hours === 0) hours = 12;\n    hours = hours.toString().padStart(2, \"0\");\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\n    return `${hours}:${minutes} ${date.getHours() >= 12 ? \"PM\" : \"AM\"}`;\n  };\n\n  const handleSelect = (slot, i) => {\n    const validateSlot = (slot, i) => {\n      // if the timeslot will overflow past 10 PM, it's invalid\n      if (i + slotsPerTimeslot > slots.length) return false;\n\n      // if the timeslot will overflow into an already selected timeslot, it's invalid\n      const end = slot + timeslotLength;\n      for (let pos = slot; pos < end; pos += 15) {\n        if (userSelectedSlots.hasOwnProperty(pos)) return false;\n      }\n\n      // otherwise it's valid\n      return true;\n    };\n\n    if (userSelectedSlots.hasOwnProperty(slot)) {\n      // if slot is already selected, tell parent to remove the associated timeslot\n      const offset = userSelectedSlots[slot][0];\n      return unselectTimeslot(\n        new Date(\n          date.getFullYear(),\n          date.getMonth(),\n          date.getDate(),\n          startHour + Math.floor(offset / 60),\n          offset % 60\n        )\n      );\n    } else if (validateSlot(slot, i)) {\n      // if slot isn't selected and is valid, tell the parent to add the associated timeslot\n      const offset = slot;\n      return selectTimeslot(\n        new Date(\n          date.getFullYear(),\n          date.getMonth(),\n          date.getDate(),\n          startHour + Math.floor(offset / 60),\n          offset % 60\n        )\n      );\n    }\n\n    // otherwise show the user an error\n    setShowToast(true);\n  };\n\n  // TODO: render slots selected by others/with openings, show 1/2 2/2\n  const renderSlot = (slot, i) => {\n    const getPositions = (slot, collection) => {\n      const isSelected = collection.hasOwnProperty(slot);\n      const isTop = isSelected && slot === collection[slot][0];\n      const isMiddle = isSelected && !collection[slot].includes(slot);\n      const isBottom = isSelected && slot === collection[slot][1];\n      return {\n        isSelected,\n        isTop,\n        isMiddle,\n        isBottom,\n      };\n    };\n\n    const generateSlotStyle = (slot) => {\n      const baseStyle = {\n        padding: 10,\n        cursor: \"pointer\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      };\n\n      const { isTop, isMiddle, isBottom } = getPositions(\n        slot,\n        userSelectedSlots\n      );\n      const borderStyle = \"1px solid black\";\n\n      return {\n        ...baseStyle,\n        borderLeft: borderStyle,\n        borderRight: borderStyle,\n        borderTop: isBottom || isMiddle ? \"none\" : borderStyle,\n        borderBottom: isTop || isMiddle ? \"none\" : borderStyle,\n        background: userSelectedSlots.hasOwnProperty(slot) ? \"green\" : \"white\",\n      };\n    };\n\n    const { isSelected, isTop, isMiddle, isBottom } = getPositions(\n      slot,\n      userSelectedSlots\n    );\n\n    const SlotBase = ({ children }) => (\n      <div\n        style={{\n          ...generateSlotStyle(slot),\n        }}\n        onClick={() => handleSelect(slot, i)}\n      >\n        {children}\n      </div>\n    );\n\n    if (isSelected) {\n      if (isTop) {\n        return (\n          <SlotBase key={slot}>\n            <span>{formatTime(dateFromSlot(slot))}</span>\n          </SlotBase>\n        );\n      } else if (isMiddle) {\n        return <SlotBase key={slot}>-</SlotBase>;\n      } else if (isBottom) {\n        return (\n          <SlotBase key={slot}>\n            <span>{formatTime(dateFromSlot(slot + 15))}</span>\n          </SlotBase>\n        );\n      }\n    }\n\n    return (\n      <div\n        style={{\n          ...generateSlotStyle(slot),\n        }}\n        key={slot}\n        onClick={() => handleSelect(slot, i)}\n      >\n        <span>{formatTime(dateFromSlot(slot))}</span>\n        <span>-</span>\n        <span>{formatTime(dateFromSlot(slot + 15))}</span>\n      </div>\n    );\n  };\n\n  return (\n    <Col style={{ width: 300, flex: \"none\" }}>\n      <div style={{ position: \"fixed\" }}>\n        <Toast\n          onClose={() => setShowToast(false)}\n          show={showToast}\n          delay={3000}\n          autohide\n        >\n          <Toast.Body>\n            <strong className=\"mr-auto\" style={{ color: \"red\" }}>\n              Invalid option/timeslot conflict!\n            </strong>\n          </Toast.Body>\n        </Toast>\n      </div>\n\n      <strong>{date.toDateString()}</strong>\n      {slots.map(renderSlot)}\n    </Col>\n  );\n};\n\nexport default ScheduleColumn;\n","import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport swal from \"@sweetalert/with-react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Toast from \"react-bootstrap/Toast\";\n\nimport {\n  AuthUserContext,\n  withFirebase,\n  withAuthorization,\n} from \"upe-react-components\";\n\nimport { isRecruitmentTeam } from \"../../util/conditions\";\nimport Loader from \"../Loader\";\nimport { Container } from \"../../styles/global\";\n\nimport ScrollableRow from \"./ScrollableRow\";\nimport ScheduleColumn from \"./ScheduleColumn\";\n\nclass InterviewerView extends Component {\n  _initFirebase = false;\n  state = {\n    settings: null,\n    loading: true,\n    error: null,\n    showToast: false,\n    selectedTimeslots: {},\n    firstDataLoad: true,\n    runningTransaction: false,\n  };\n  static contextType = AuthUserContext;\n  unsub = null;\n\n  componentDidMount() {\n    if (this.props.firebase && !this._initFirebase) this.loadSettings();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.firebase && !this._initFirebase) this.loadSettings();\n  }\n\n  componentWillUnmount() {\n    if (typeof this.unsub === \"function\") this.unsub();\n  }\n\n  loadSettings = async () => {\n    this._initFirebase = true;\n    const doc = await this.props.firebase.generalSettings().get();\n\n    if (!doc.exists) this.setState({ error: \"Failed to load timeslots!\" });\n    else {\n      const settings = doc.data();\n      const selectedTimeslots = {};\n      settings.timeslotDays = settings.timeslotDays.map((day) => {\n        const date = day.toDate();\n        selectedTimeslots[date.toDateString()] = [];\n        return date;\n      });\n      this.setState({ settings, selectedTimeslots }, () => {\n        this.unsub = this.props.firebase\n          .timeslots()\n          .onSnapshot((querySnapshot) => {\n            const { selectedTimeslots } = this.state;\n            const listenerData = querySnapshot.docs.map((doc) => {\n              return {\n                ...doc.data(),\n                time: doc.data().time.toDate(), // make sure to convert timestamp objects to Date objects\n                id: doc.id,\n              };\n            });\n\n            listenerData.forEach((ts) => {\n              const key = ts.time.toDateString();\n              if (selectedTimeslots.hasOwnProperty(key)) {\n                const index = selectedTimeslots[key].findIndex(\n                  (sts) => sts.id === ts.id\n                );\n                if (index > -1) {\n                  selectedTimeslots[key][index] = ts;\n                } else {\n                  selectedTimeslots[key].push(ts);\n                }\n              } else {\n                selectedTimeslots[key] = [ts];\n              }\n            });\n\n            this.setState({\n              selectedTimeslots,\n              loading: false,\n              firstDataLoad: false,\n            });\n          }, console.error);\n      });\n    }\n  };\n\n  // when saving, only deal with timeslots associated with this user\n  saveTimeslots = async () => {\n    const { firebase } = this.props;\n    const authUser = this.context;\n    const { selectedTimeslots, settings } = this.state;\n\n    // wipe state before transaction\n    this.setState({\n      selectedTimeslots: settings.timeslotDays.reduce((acc, cur) => {\n        acc[cur.toDateString()] = [];\n        return acc;\n      }, {}),\n      runningTransaction: true,\n    });\n\n    const existingTimeslots = await firebase\n      .timeslots()\n      .get()\n      .then((snapshot) =>\n        snapshot.docs.map((doc) => {\n          return {\n            ...doc.data(),\n            time: doc.data().time.toDate(),\n            id: doc.id,\n          };\n        })\n      );\n\n    const newTimeslots = Object.values(selectedTimeslots)\n      .flat()\n      .filter((ts) => ts.interviewers.hasOwnProperty(authUser.uid));\n    const newTimeslotMap = {};\n    newTimeslots.forEach((ts, i) => (newTimeslotMap[ts.time] = i));\n\n    // helper function that does for each and waits\n    const asyncForEach = async (array, callback) => {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    };\n\n    try {\n      // run all of this inside a transaction so it will restart if someone makes changes at the same time\n      await firebase.firestoreRoot.runTransaction(async (transaction) => {\n        // first remove timeslots the user no longer is in\n        asyncForEach(\n          existingTimeslots.filter((ts) =>\n            // filter for timeslots this user is a part of\n            ts.interviewers.hasOwnProperty(authUser.uid)\n          ),\n          async (ts, i) => {\n            // if old timeslot is no longer selected, remove interviewer from it\n            if (!newTimeslotMap.hasOwnProperty(ts.time)) {\n              const doc = existingTimeslots[i];\n              const { id } = doc;\n              delete doc.id;\n              delete doc.interviewers[authUser.uid];\n              if (\n                Object.keys(doc.interviewers).length === 0 &&\n                !doc.hasOwnProperty(\"applicant\")\n              )\n                transaction.delete(firebase.timeslot(id));\n              // TODO: notify admins if an timeslot with an applicant loses interviewers\n              else transaction.update(firebase.timeslot(id), doc);\n            }\n          }\n        );\n\n        // iterate over newly selected timeslots\n        // that is timeslots the user is in and don't already exist\n        await asyncForEach(newTimeslots, async (ts) => {\n          // get existing timeslots that match current timeslot time\n          const matchingTimeslots = existingTimeslots.filter(\n            (ets) => ets.time.getTime() === ts.time.getTime()\n          );\n\n          // only proceed if none of those timeslots have the current user already\n          if (\n            matchingTimeslots.every(\n              (ts) => !ts.interviewers.hasOwnProperty(authUser.uid)\n            )\n          ) {\n            let wroteToDb = false;\n            await asyncForEach(matchingTimeslots, async (mts) => {\n              if (wroteToDb) return;\n              const doc = await transaction.get(firebase.timeslot(mts.id));\n              const timeslot = { ...doc.data() };\n              if (Object.keys(timeslot.interviewers).length < 2) {\n                timeslot.interviewers[authUser.uid] = authUser.name;\n                transaction.update(firebase.timeslot(mts.id), timeslot);\n                wroteToDb = true;\n              }\n            });\n\n            if (!wroteToDb) {\n              // if none, create a new timeslot object and add it to existing timeslots\n              const interviewers = {};\n              interviewers[authUser.uid] = authUser.name;\n              const newTimeslotRef = firebase.timeslots().doc();\n              transaction.set(newTimeslotRef, ts);\n            }\n          }\n        });\n      });\n    } catch (e) {\n      this.setState({ selectedTimeslots });\n      console.error(\"Transaction failure!\", e);\n      swal(\n        \"Uh oh!\",\n        \"Something went wrong with saving your selections! Please refresh the page and try again!\",\n        \"error\"\n      );\n    }\n\n    this.setState({ showToast: true, runningTransaction: false });\n    window.scrollTo(0, document.body.scrollHeight);\n  };\n\n  selectTimeslot = (date) => {\n    const day = date.toDateString();\n    const {\n      selectedTimeslots,\n      settings: { timeslotLength },\n    } = this.state;\n    const authUser = this.context;\n\n    // iterate over timeslots interviewer is not in and add interviewer if possible\n    let saved = false;\n    selectedTimeslots[day]\n      .filter((ts) => !ts.interviewers.hasOwnProperty(authUser.uid))\n      .forEach((ts) => {\n        if (\n          ts.time.getTime() === date.getTime() &&\n          Object.keys(ts.interviewers).length < 2 &&\n          !saved\n        ) {\n          ts.interviewers[authUser.uid] = authUser.name;\n          saved = true;\n        }\n      });\n\n    // if interviewer hasn't been added yet, push a new timeslot\n    if (!saved) {\n      const interviewers = {};\n      interviewers[authUser.uid] = authUser.name;\n      selectedTimeslots[day].push({\n        time: date,\n        interviewers,\n        timeslotLength,\n      });\n    }\n    this.setState({ selectedTimeslots });\n  };\n\n  unselectTimeslot = (date) => {\n    const day = date.toDateString();\n    const { selectedTimeslots } = this.state;\n    const authUser = this.context;\n\n    // first remove this user from list of interviewers in relevant timeslot\n    selectedTimeslots[day] = selectedTimeslots[day].map((ts) => {\n      if (\n        ts.interviewers.hasOwnProperty(authUser.uid) &&\n        ts.time.getTime() === date.getTime()\n      )\n        delete ts.interviewers[authUser.uid];\n      return ts;\n    });\n\n    // filter out timeslots with no interviewers or applicants\n    selectedTimeslots[day] = selectedTimeslots[day].filter(\n      (ts) =>\n        Object.keys(ts.interviewers).length > 0 ||\n        ts.hasOwnProperty(\"applicant\")\n    );\n    this.setState({ selectedTimeslots });\n  };\n\n  timeslotsToSlots = (timeslots) => {\n    const startHour = this.state.settings.timeslotStart;\n    const slots = {};\n    timeslots.forEach((ts) => {\n      const slot = (ts.time.getHours() - startHour) * 60 + ts.time.getMinutes();\n      const end = slot + this.state.settings.timeslotLength - 15;\n      for (let pos = slot; pos <= end; pos += 15) {\n        slots[pos] = [slot, end];\n      }\n    });\n    return slots;\n  };\n\n  render() {\n    const {\n      loading,\n      runningTransaction,\n      error,\n      selectedTimeslots,\n      showToast,\n    } = this.state;\n\n    if (loading || runningTransaction) return <Loader />;\n    if (error)\n      return (\n        <Container flexdirection=\"column\">\n          <h1>{error}</h1>\n        </Container>\n      );\n\n    const {\n      timeslotsOpen,\n      timeslotsOpenForApplicants,\n      timeslotLength,\n      timeslotDays,\n      timeslotStart,\n      timeslotEnd,\n    } = this.state.settings;\n\n    const authUser = this.context;\n\n    if (!timeslotsOpen)\n      return (\n        <Container flexdirection=\"column\">\n          <h1>Timeslot selection is closed!</h1>\n        </Container>\n      );\n\n    if (authUser.roles.applicant && !timeslotsOpenForApplicants)\n      return (\n        <Container flexdirection=\"column\">\n          <h1>Timeslot selection isn't open yet!</h1>\n        </Container>\n      );\n\n    return (\n      <Container flexdirection=\"column\">\n        <h1>Interviewer Timeslot Selection</h1>\n        <ScrollableRow>\n          {timeslotDays.map((date, i) => {\n            // TODO: explain this data structure in depth, good place for docz\n            // selectedSlots is an object/hashmap for performance reasons\n            const timeslotsForDay = selectedTimeslots[date.toDateString()];\n            const userSelectedSlots = timeslotsForDay\n              ? this.timeslotsToSlots(\n                  timeslotsForDay.filter((ts) =>\n                    ts.interviewers.hasOwnProperty(authUser.uid)\n                  )\n                )\n              : {};\n            const slotsWithOpening = timeslotsForDay\n              ? this.timeslotsToSlots(\n                  timeslotsForDay.filter(\n                    (ts) =>\n                      !ts.interviewers.hasOwnProperty(authUser.uid) &&\n                      Object.keys(ts.interviewers).length < 2\n                  )\n                )\n              : {};\n            return (\n              <ScheduleColumn\n                key={i}\n                date={date}\n                timeslotLength={timeslotLength}\n                userSelectedSlots={userSelectedSlots}\n                slotsWithOpening={slotsWithOpening}\n                selectTimeslot={this.selectTimeslot}\n                unselectTimeslot={this.unselectTimeslot}\n                startHour={timeslotStart}\n                endHour={timeslotEnd}\n              />\n            );\n          })}\n        </ScrollableRow>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Button\n            style={{ width: \"fit-content\", marginTop: 20, marginBottom: 20 }}\n            onClick={this.saveTimeslots}\n          >\n            Save Selections\n          </Button>\n          <Toast\n            onClose={() => this.setState({ showToast: false })}\n            show={showToast}\n            delay={3000}\n            autohide\n            style={{\n              width: \"fit-content\",\n              height: \"fit-content\",\n              marginLeft: 25,\n            }}\n          >\n            <Toast.Header>\n              <strong className=\"mr-auto\">Selections Saved!</strong>\n            </Toast.Header>\n          </Toast>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  withAuthorization(isRecruitmentTeam),\n  withFirebase\n)(InterviewerView);\n","import React from \"react\";\nimport { compose } from \"recompose\";\n\nimport { isApplicant } from \"../../util/conditions\";\nimport {\n  AuthUserContext,\n  withFirebase,\n  withAuthorization,\n} from \"upe-react-components\";\n\nimport { Container } from \"../../styles/global\";\n\nconst ApplicantView = ({ firebase }) => {\n  return (\n    <Container flexdirection=\"column\">\n      <h1>Applicant Timeslot Selection</h1>\n    </Container>\n  );\n};\n\nexport default compose(\n  withAuthorization(isApplicant),\n  withFirebase\n)(ApplicantView);\n","import React, { useContext } from \"react\";\n\nimport { isRecruitmentTeam } from \"../util/conditions\";\nimport { AuthUserContext } from \"upe-react-components\";\nimport Layout from \"../components/Layout\";\nimport { InterviewerView, ApplicantView } from \"../components/Timeslots\";\n\nconst TimeslotPage = ({ location }) => {\n  const authUser = useContext(AuthUserContext);\n  return isRecruitmentTeam(authUser) ? (\n    <InterviewerView location={location} />\n  ) : (\n    <ApplicantView location={location} />\n  );\n};\n\nexport default () => (\n  <Layout>\n    <TimeslotPage />\n  </Layout>\n);\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n"],"sourceRoot":""}